<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Licensed to the Apache Software Foundation (ASF) under one
 ~ or more contributor license agreements.  See the NOTICE file
 ~ distributed with this work for additional information
 ~ regarding copyright ownership.  The ASF licenses this file
 ~ to you under the Apache License, Version 2.0 (the
 ~ "License"); you may not use this file except in compliance
 ~ with the License.  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<project default="jar" name="databus-mapred" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="build.src" value="${basedir}/src" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="ivy.lib.dir" value="${build.dir}/lib/" />
    <property name="ivy.jars.dir" value="${build.dir}/lib/jars/" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="final.name" value="databus-mapred" />
    <property name="ivy.version" value="2.1.0" />
    <property name="ivy.url"
              value="http://repo2.maven.org/maven2/org/apache/ivy/ivy" />

    <condition property="ivy.jar.exists">
        <available file="${build.dir}/ivy-${ivy.version}.jar" />
    </condition>

    <path id="autoivy.classpath">
        <fileset dir="${ivy.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${build.dir}/ivy-${ivy.version}.jar"/>
    </path>

    <path id="databus-mapred.build.classpath">
        <fileset dir="${ivy.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${ivy.lib.dir}" />

    </target>
	
    <target name="init">
        <mkdir dir="${build.classes}" />
    </target>

    <target depends="init,ivy-retrieve-build" name="build">
        <javac destdir="${build.classes}" debug="true">
            <src path="${build.src}" />
            <classpath refid="databus-mapred.build.classpath" />
        </javac>
    </target>

    <target name="jar" depends="build">
        <mkdir dir="${build.classes}/META-INF" />
        <mkdir dir="${build.classes}/lib" />
    	<copy todir="${build.classes}/lib">
    	   <fileset dir="${ivy.jars.dir}">
    	      <include name="**/*.jar" />
    	   	  <include name="**/*.properties" />
           </fileset>
    	</copy>
    	<copy todir="${build.classes}/lib">
    	   <fileset dir="${lib.dir}">
    	      <include name="**/*.jar" />
    	   	  <include name="**/*.properties" />
    	   </fileset>
    	</copy>
    	<!-- hack because of classloader incompatibility: -->
    	
    	<mkdir dir="${build.classes}/libvar" />
    	<!--
    	<mkdir dir="${build.classes}/libvar/libcassandra1.2.6" />
    	<move todir="${build.classes}/libvar/libcassandra1.2.6">
    	   <fileset dir="${ivy.lib.dir}">
    	      <include name="**/cassandra-all-1.2.6.jar" />
  	          <include name="**/cassandra-thrift-1.2.6.jar" />    	   	
    	   </fileset>
    	</move>
    	-->
    	<delete file="${ivy.lib.dir}/cassandra-all-1.2.6.jar"/>
    	<delete file="${ivy.lib.dir}/cassandra-thrift-1.2.6.jar"/>


    	<!--
    	<mkdir dir="${build.classes}/libvar/commonInterface" />
    	<move todir="${build.classes}/libvar/commonInterface">
    	   <fileset dir="${build.classes}">
    	      <include name="**/IPlayormContext.class" />
    	   </fileset>
    	</move>
    	-->
    	<mkdir dir="${build.classes}/libvar/playormLib" />
    	<move todir="${build.classes}/libvar/playormLib">
    	   <fileset dir="${build.classes}/lib">
    	      <include name="playorm.jar" />
    	   </fileset>
    	</move>
    	<copy todir="${build.classes}/libvar/playormLib">
    	   <fileset dir="${lib.dir}/cassandra">
			 <include name="cassandra-all-1.2.5.jar" />
			 <include name="cassandra-thrift-1.2.5.jar" />
    	   </fileset>
    	</copy>
    	<copy todir="${build.classes}/libvar/playormLib">
    	   <fileset dir="${build.classes}/lib">
    	      <include name="**/astyanax-*.jar" />
    	   </fileset>
    	</copy>
    	<move todir="${build.classes}/libvar/playormLib">
    	   <fileset dir="${build.classes}">
    	      <include name="**/PlayormContext.class" />
    	   </fileset>
    	</move>
    	
        <jar jarfile="${build.dir}/${final.name}.jar">
           <!--<fileset dir="${build.classes}" />-->
           <fileset dir="${build.classes}">
        	  <include name="**/*.jar" />
           	  <include name="**/*.class" />
           	  <include name="**/*.properties" />
           </fileset>

           <fileset dir="${ivy.jars.dir}">
              <include name="*.jar" />
           	  <include name="**/*.properties" />
           </fileset> 
           <fileset file="${basedir}/cassandra.yaml" />
        </jar>
    </target>



    <!--
        Ivy Specific targets
            to fetch Ivy and this project's dependencies
    -->
	<target name="ivy-download" unless="ivy.jar.exists">
      <echo>Downloading Ivy...</echo>
      <mkdir dir="${build.dir}" />
      <get src="${ivy.url}/${ivy.version}/ivy-${ivy.version}.jar"
           dest="${build.dir}/ivy-${ivy.version}.jar" usetimestamp="true" />
    </target>

    <target name="ivy-init" depends="ivy-download" unless="ivy.initialized">
      <mkdir dir="${ivy.lib.dir}"/>
      <taskdef resource="org/apache/ivy/ant/antlib.xml"
               uri="antlib:org.apache.ivy.ant"
               classpathref="autoivy.classpath"/>
      <property name="ivy.initialized" value="true"/>
    </target>

    <target name="ivy-retrieve-build" depends="ivy-init">
      <ivy:retrieve type="jar,source" sync="true"
             pattern="${ivy.lib.dir}/[type]s/[artifact]-[revision].[ext]" />
    </target>
</project>
